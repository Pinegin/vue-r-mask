<template>
  <div>
    <input v-model="message" v-mask="/\d{2}-\d{2}/">
    <p>{{message}}</p>
  </div>
</template>

<script>
import caret from  './caretPos.js'; 
export default {
	data (){
		return {
			message: '',
		};
	},
	directives: {
    mask: {
      bind (el, val, VNode){
				initMask(el, val);
        el.removeEventListener('input', VNode.data.on.input)
        el.addEventListener('input', maskFunc);
        el.addEventListener('keydown', maskFunc);
        el.addEventListener('click', maskFunc);
        el.addEventListener('focus', maskFunc);
        el.addEventListener('input', VNode.data.on.input)
      },
      unbind (el){
        el.removeEventListener('input', maskFunc)
      },
    }
	}
}
var mask = null;
var prevVal = null;
var prevPos = null;
var frame;
function initMask (el, val){
	frame = [];
	var str = val.value.toString().slice(1,-1);
	var reg = /(?:\\d+\{[\d,]\})|./g, match;
	while(match = reg.exec(str)){
		var toPush = {reg: new RegExp(match[0]), regStr: match[0]};
		if(match[0].length == 1){
			toPush.minLen = 1;
			toPush.maxLen = 1;
			toPush.newReg = match[0];
      toPush.charReg = match[0];
      toPush.type = 'single';
		} else {
			toPush.minLen = +/\{(\d+)/.exec(match[0])[1];
			toPush.maxLen = +/(\d+)\}/.exec(match[0])[1];
			toPush.newReg = '(_|' + match[0].replace('{', '){');
      toPush.charReg = /[^{]+/.exec(toPush.newReg);
		}
		frame.push(toPush);	
	}
	var value = frame.map(function(e) {
		if(e.regStr.length == 1){
			return e.regStr;
		} else {
			return new Array(e.minLen+1).join('_');
		}
	});
	value = value.join('')
	el.value = value;
	prevVal = el.value;
	prevPos = caret.get(el);
};
function maskFunc (el){	
	if(this.value == prevVal){
		prevPos = caret.get(this);
		return;
	}
	prevPos = caret.get(this);
  var pos = 0;
  var newVal = '';
  for(var i = 0; i < frame.length; i++){
    for(var k = 0; k < frame[i].maxLen; k++){     
      if(new RegExp(frame[i].charReg+'+').exec(this.value[pos])){
        newVal += this.value[pos];
      }else{
        if(frame[i].type == 'single'){
          newVal += frame[i].charReg;
          prevPos++;
          pos--;
        }else{
          newVal += '_';
        }
      }
      pos++;
    }
  }
  this.value = newVal;
  caret.set(this, prevPos);
	prevVal = this.value;
}
</script>

